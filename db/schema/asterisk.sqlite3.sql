PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE alembic_version_config (
	version_num VARCHAR(32) NOT NULL, 
	CONSTRAINT alembic_version_config_pkc PRIMARY KEY (version_num)
);
INSERT INTO alembic_version_config VALUES('28887f25a46f');
CREATE TABLE sippeers (
	id INTEGER NOT NULL, 
	name VARCHAR(40) NOT NULL, 
	ipaddr VARCHAR(45), 
	port INTEGER, 
	regseconds INTEGER, 
	defaultuser VARCHAR(40), 
	fullcontact VARCHAR(80), 
	regserver VARCHAR(20), 
	useragent VARCHAR(20), 
	lastms INTEGER, 
	host VARCHAR(40), 
	type VARCHAR(6), 
	context VARCHAR(40), 
	permit VARCHAR(95), 
	deny VARCHAR(95), 
	secret VARCHAR(40), 
	md5secret VARCHAR(40), 
	remotesecret VARCHAR(40), 
	transport VARCHAR(7), 
	dtmfmode VARCHAR(9), 
	directmedia VARCHAR(6), 
	nat VARCHAR(29), 
	callgroup VARCHAR(40), 
	pickupgroup VARCHAR(40), 
	language VARCHAR(40), 
	disallow VARCHAR(200), 
	allow VARCHAR(200), 
	insecure VARCHAR(40), 
	trustrpid VARCHAR(3), 
	progressinband VARCHAR(5), 
	promiscredir VARCHAR(3), 
	useclientcode VARCHAR(3), 
	accountcode VARCHAR(40), 
	setvar VARCHAR(200), 
	callerid VARCHAR(40), 
	amaflags VARCHAR(40), 
	callcounter VARCHAR(3), 
	busylevel INTEGER, 
	allowoverlap VARCHAR(3), 
	allowsubscribe VARCHAR(3), 
	videosupport VARCHAR(3), 
	maxcallbitrate INTEGER, 
	rfc2833compensate VARCHAR(3), 
	mailbox VARCHAR(40), 
	"session-timers" VARCHAR(9), 
	"session-expires" INTEGER, 
	"session-minse" INTEGER, 
	"session-refresher" VARCHAR(3), 
	t38pt_usertpsource VARCHAR(40), 
	regexten VARCHAR(40), 
	fromdomain VARCHAR(40), 
	fromuser VARCHAR(40), 
	qualify VARCHAR(40), 
	defaultip VARCHAR(45), 
	rtptimeout INTEGER, 
	rtpholdtimeout INTEGER, 
	sendrpid VARCHAR(3), 
	outboundproxy VARCHAR(40), 
	callbackextension VARCHAR(40), 
	timert1 INTEGER, 
	timerb INTEGER, 
	qualifyfreq INTEGER, 
	constantssrc VARCHAR(3), 
	contactpermit VARCHAR(95), 
	contactdeny VARCHAR(95), 
	usereqphone VARCHAR(3), 
	textsupport VARCHAR(3), 
	faxdetect VARCHAR(3), 
	buggymwi VARCHAR(3), 
	auth VARCHAR(40), 
	fullname VARCHAR(40), 
	trunkname VARCHAR(40), 
	cid_number VARCHAR(40), 
	callingpres VARCHAR(21), 
	mohinterpret VARCHAR(40), 
	mohsuggest VARCHAR(40), 
	parkinglot VARCHAR(40), 
	hasvoicemail VARCHAR(3), 
	subscribemwi VARCHAR(3), 
	vmexten VARCHAR(40), 
	autoframing VARCHAR(3), 
	rtpkeepalive INTEGER, 
	"call-limit" INTEGER, 
	g726nonstandard VARCHAR(3), 
	ignoresdpversion VARCHAR(3), 
	allowtransfer VARCHAR(3), 
	dynamic VARCHAR(3), 
	path VARCHAR(256), 
	supportpath VARCHAR(3), 
	PRIMARY KEY (id), 
	UNIQUE (name)
);
CREATE TABLE iaxfriends (
	id INTEGER NOT NULL, 
	name VARCHAR(40) NOT NULL, 
	type VARCHAR(6), 
	username VARCHAR(40), 
	mailbox VARCHAR(40), 
	secret VARCHAR(40), 
	dbsecret VARCHAR(40), 
	context VARCHAR(40), 
	regcontext VARCHAR(40), 
	host VARCHAR(40), 
	ipaddr VARCHAR(40), 
	port INTEGER, 
	defaultip VARCHAR(20), 
	sourceaddress VARCHAR(20), 
	mask VARCHAR(20), 
	regexten VARCHAR(40), 
	regseconds INTEGER, 
	accountcode VARCHAR(20), 
	mohinterpret VARCHAR(20), 
	mohsuggest VARCHAR(20), 
	inkeys VARCHAR(40), 
	outkeys VARCHAR(40), 
	language VARCHAR(10), 
	callerid VARCHAR(100), 
	cid_number VARCHAR(40), 
	sendani VARCHAR(3), 
	fullname VARCHAR(40), 
	trunk VARCHAR(3), 
	auth VARCHAR(20), 
	maxauthreq INTEGER, 
	requirecalltoken VARCHAR(4), 
	encryption VARCHAR(6), 
	transfer VARCHAR(9), 
	jitterbuffer VARCHAR(3), 
	forcejitterbuffer VARCHAR(3), 
	disallow VARCHAR(200), 
	allow VARCHAR(200), 
	codecpriority VARCHAR(40), 
	qualify VARCHAR(10), 
	qualifysmoothing VARCHAR(3), 
	qualifyfreqok VARCHAR(10), 
	qualifyfreqnotok VARCHAR(10), 
	timezone VARCHAR(20), 
	adsi VARCHAR(3), 
	amaflags VARCHAR(20), 
	setvar VARCHAR(200), 
	PRIMARY KEY (id), 
	UNIQUE (name)
);
CREATE TABLE voicemail (
	uniqueid INTEGER NOT NULL, 
	context VARCHAR(80) NOT NULL, 
	mailbox VARCHAR(80) NOT NULL, 
	password VARCHAR(80) NOT NULL, 
	fullname VARCHAR(80), 
	alias VARCHAR(80), 
	email VARCHAR(80), 
	pager VARCHAR(80), 
	"attach" VARCHAR(3), 
	attachfmt VARCHAR(10), 
	serveremail VARCHAR(80), 
	language VARCHAR(20), 
	tz VARCHAR(30), 
	deletevoicemail VARCHAR(3), 
	saycid VARCHAR(3), 
	sendvoicemail VARCHAR(3), 
	review VARCHAR(3), 
	tempgreetwarn VARCHAR(3), 
	operator VARCHAR(3), 
	envelope VARCHAR(3), 
	sayduration INTEGER, 
	forcename VARCHAR(3), 
	forcegreetings VARCHAR(3), 
	callback VARCHAR(80), 
	dialout VARCHAR(80), 
	exitcontext VARCHAR(80), 
	maxmsg INTEGER, 
	volgain NUMERIC(5, 2), 
	imapuser VARCHAR(80), 
	imappassword VARCHAR(80), 
	imapserver VARCHAR(80), 
	imapport VARCHAR(8), 
	imapflags VARCHAR(80), 
	stamp DATETIME, 
	PRIMARY KEY (uniqueid)
);
CREATE TABLE meetme (
	bookid INTEGER NOT NULL, 
	confno VARCHAR(80) NOT NULL, 
	starttime DATETIME, 
	endtime DATETIME, 
	pin VARCHAR(20), 
	adminpin VARCHAR(20), 
	opts VARCHAR(20), 
	adminopts VARCHAR(20), 
	recordingfilename VARCHAR(80), 
	recordingformat VARCHAR(10), 
	maxusers INTEGER, 
	members INTEGER NOT NULL, 
	PRIMARY KEY (bookid)
);
CREATE TABLE musiconhold (
	name VARCHAR(80) NOT NULL, 
	mode VARCHAR(10), 
	directory VARCHAR(255), 
	application VARCHAR(255), 
	digit VARCHAR(1), 
	sort VARCHAR(10), 
	format VARCHAR(10), 
	stamp DATETIME, 
	PRIMARY KEY (name)
);
CREATE TABLE ps_endpoints (
	id VARCHAR(40) NOT NULL, 
	transport VARCHAR(40), 
	aors VARCHAR(200), 
	auth VARCHAR(40), 
	context VARCHAR(40), 
	disallow VARCHAR(200), 
	allow VARCHAR(200), 
	direct_media VARCHAR(3), 
	connected_line_method VARCHAR(8), 
	direct_media_method VARCHAR(8), 
	direct_media_glare_mitigation VARCHAR(8), 
	disable_direct_media_on_nat VARCHAR(3), 
	dtmf_mode VARCHAR(7), 
	external_media_address VARCHAR(40), 
	force_rport VARCHAR(3), 
	ice_support VARCHAR(3), 
	identify_by VARCHAR(8), 
	mailboxes VARCHAR(40), 
	moh_suggest VARCHAR(40), 
	outbound_auth VARCHAR(40), 
	outbound_proxy VARCHAR(40), 
	rewrite_contact VARCHAR(3), 
	rtp_ipv6 VARCHAR(3), 
	rtp_symmetric VARCHAR(3), 
	send_diversion VARCHAR(3), 
	send_pai VARCHAR(3), 
	send_rpid VARCHAR(3), 
	timers_min_se INTEGER, 
	timers VARCHAR(8), 
	timers_sess_expires INTEGER, 
	callerid VARCHAR(40), 
	callerid_privacy VARCHAR(23), 
	callerid_tag VARCHAR(40), 
	"100rel" VARCHAR(8), 
	aggregate_mwi VARCHAR(3), 
	trust_id_inbound VARCHAR(3), 
	trust_id_outbound VARCHAR(3), 
	use_ptime VARCHAR(3), 
	use_avpf VARCHAR(3), 
	media_encryption VARCHAR(4), 
	inband_progress VARCHAR(3), 
	call_group VARCHAR(40), 
	pickup_group VARCHAR(40), 
	named_call_group VARCHAR(40), 
	named_pickup_group VARCHAR(40), 
	device_state_busy_at INTEGER, 
	fax_detect VARCHAR(3), 
	t38_udptl VARCHAR(3), 
	t38_udptl_ec VARCHAR(10), 
	t38_udptl_maxdatagram INTEGER, 
	t38_udptl_nat VARCHAR(3), 
	t38_udptl_ipv6 VARCHAR(3), 
	tone_zone VARCHAR(40), 
	language VARCHAR(40), 
	one_touch_recording VARCHAR(3), 
	record_on_feature VARCHAR(40), 
	record_off_feature VARCHAR(40), 
	rtp_engine VARCHAR(40), 
	allow_transfer VARCHAR(3), 
	allow_subscribe VARCHAR(3), 
	sdp_owner VARCHAR(40), 
	sdp_session VARCHAR(40), 
	tos_audio INTEGER, 
	tos_video INTEGER, 
	cos_audio INTEGER, 
	cos_video INTEGER, 
	sub_min_expiry INTEGER, 
	from_domain VARCHAR(40), 
	from_user VARCHAR(40), 
	mwi_from_user VARCHAR(40), 
	dtls_verify VARCHAR(40), 
	dtls_rekey VARCHAR(40), 
	dtls_cert_file VARCHAR(200), 
	dtls_private_key VARCHAR(200), 
	dtls_cipher VARCHAR(200), 
	dtls_ca_file VARCHAR(200), 
	dtls_ca_path VARCHAR(200), 
	dtls_setup VARCHAR(7), 
	srtp_tag_32 VARCHAR(3), media_address VARCHAR(40), redirect_method VARCHAR(9), set_var TEXT, 
	UNIQUE (id)
);
CREATE TABLE ps_auths (
	id VARCHAR(40) NOT NULL, 
	auth_type VARCHAR(8), 
	nonce_lifetime INTEGER, 
	md5_cred VARCHAR(40), 
	password VARCHAR(80), 
	realm VARCHAR(40), 
	username VARCHAR(40), 
	UNIQUE (id)
);
CREATE TABLE ps_aors (
	id VARCHAR(40) NOT NULL, 
	contact VARCHAR(40), 
	default_expiration INTEGER, 
	mailboxes VARCHAR(80), 
	max_contacts INTEGER, 
	minimum_expiration INTEGER, 
	remove_existing VARCHAR(3), 
	qualify_frequency INTEGER, 
	authenticate_qualify VARCHAR(3), maximum_expiration INTEGER, outbound_proxy VARCHAR(40), support_path VARCHAR(3), 
	UNIQUE (id)
);
CREATE TABLE ps_contacts (
	id VARCHAR(40) NOT NULL, 
	uri VARCHAR(40), 
	expiration_time VARCHAR(40), 
	qualify_frequency INTEGER, outbound_proxy VARCHAR(40), path TEXT, 
	UNIQUE (id)
);
CREATE TABLE ps_domain_aliases (
	id VARCHAR(40) NOT NULL, 
	domain VARCHAR(80), 
	UNIQUE (id)
);
CREATE TABLE ps_endpoint_id_ips (
	id VARCHAR(40) NOT NULL, 
	endpoint VARCHAR(40), 
	"match" VARCHAR(80), 
	UNIQUE (id)
);
CREATE TABLE extensions (
	id BIGINT NOT NULL, 
	context VARCHAR(40) NOT NULL, 
	exten VARCHAR(40) NOT NULL, 
	priority INTEGER NOT NULL, 
	app VARCHAR(40) NOT NULL, 
	appdata VARCHAR(256) NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (context, exten, priority), 
	UNIQUE (id)
);
CREATE TABLE ps_systems (
	id VARCHAR(40) NOT NULL, 
	timer_t1 INTEGER, 
	timer_b INTEGER, 
	compact_headers VARCHAR(3), 
	threadpool_initial_size INTEGER, 
	threadpool_auto_increment INTEGER, 
	threadpool_idle_timeout INTEGER, 
	threadpool_max_size INTEGER, 
	UNIQUE (id)
);
CREATE TABLE ps_globals (
	id VARCHAR(40) NOT NULL, 
	max_forwards INTEGER, 
	user_agent VARCHAR(40), 
	default_outbound_endpoint VARCHAR(40), debug VARCHAR(40), 
	UNIQUE (id)
);
CREATE TABLE ps_transports (
	id VARCHAR(40) NOT NULL, 
	async_operations INTEGER, 
	bind VARCHAR(40), 
	ca_list_file VARCHAR(200), 
	cert_file VARCHAR(200), 
	cipher VARCHAR(200), 
	domain VARCHAR(40), 
	external_media_address VARCHAR(40), 
	external_signaling_address VARCHAR(40), 
	external_signaling_port INTEGER, 
	method VARCHAR(11), 
	local_net VARCHAR(40), 
	password VARCHAR(40), 
	priv_key_file VARCHAR(200), 
	protocol VARCHAR(3), 
	require_client_cert VARCHAR(3), 
	verify_client VARCHAR(3), 
	verifiy_server VARCHAR(3), 
	tos VARCHAR(3), 
	cos VARCHAR(3), 
	UNIQUE (id)
);
CREATE TABLE ps_registrations (
	id VARCHAR(40) NOT NULL, 
	auth_rejection_permanent VARCHAR(3), 
	client_uri VARCHAR(40), 
	contact_user VARCHAR(40), 
	expiration INTEGER, 
	max_retries INTEGER, 
	outbound_auth VARCHAR(40), 
	outbound_proxy VARCHAR(40), 
	retry_interval INTEGER, 
	forbidden_retry_interval INTEGER, 
	server_uri VARCHAR(40), 
	transport VARCHAR(40), 
	support_path VARCHAR(3), 
	UNIQUE (id)
);
CREATE TABLE queues (
	name VARCHAR(128) NOT NULL, 
	musiconhold VARCHAR(128), 
	announce VARCHAR(128), 
	context VARCHAR(128), 
	timeout INTEGER, 
	ringinuse VARCHAR(3), 
	setinterfacevar VARCHAR(3), 
	setqueuevar VARCHAR(3), 
	setqueueentryvar VARCHAR(3), 
	monitor_format VARCHAR(8), 
	membermacro VARCHAR(512), 
	membergosub VARCHAR(512), 
	queue_youarenext VARCHAR(128), 
	queue_thereare VARCHAR(128), 
	queue_callswaiting VARCHAR(128), 
	queue_quantity1 VARCHAR(128), 
	queue_quantity2 VARCHAR(128), 
	queue_holdtime VARCHAR(128), 
	queue_minutes VARCHAR(128), 
	queue_minute VARCHAR(128), 
	queue_seconds VARCHAR(128), 
	queue_thankyou VARCHAR(128), 
	queue_callerannounce VARCHAR(128), 
	queue_reporthold VARCHAR(128), 
	announce_frequency INTEGER, 
	announce_to_first_user VARCHAR(3), 
	min_announce_frequency INTEGER, 
	announce_round_seconds INTEGER, 
	announce_holdtime VARCHAR(128), 
	announce_position VARCHAR(128), 
	announce_position_limit INTEGER, 
	periodic_announce VARCHAR(50), 
	periodic_announce_frequency INTEGER, 
	relative_periodic_announce VARCHAR(3), 
	random_periodic_announce VARCHAR(3), 
	retry INTEGER, 
	wrapuptime INTEGER, 
	penaltymemberslimit INTEGER, 
	autofill VARCHAR(3), 
	monitor_type VARCHAR(128), 
	autopause VARCHAR(3), 
	autopausedelay INTEGER, 
	autopausebusy VARCHAR(3), 
	autopauseunavail VARCHAR(3), 
	maxlen INTEGER, 
	servicelevel INTEGER, 
	strategy VARCHAR(11), 
	joinempty VARCHAR(128), 
	leavewhenempty VARCHAR(128), 
	reportholdtime VARCHAR(3), 
	memberdelay INTEGER, 
	weight INTEGER, 
	timeoutrestart VARCHAR(3), 
	defaultrule VARCHAR(128), 
	timeoutpriority VARCHAR(128), 
	PRIMARY KEY (name)
);
CREATE TABLE queue_members (
	queue_name VARCHAR(80) NOT NULL, 
	interface VARCHAR(80) NOT NULL, 
	uniqueid VARCHAR(80) NOT NULL, 
	membername VARCHAR(80), 
	state_interface VARCHAR(80), 
	penalty INTEGER, 
	paused INTEGER, 
	PRIMARY KEY (queue_name, interface)
);
CREATE INDEX sippeers_name ON sippeers (name);
CREATE INDEX sippeers_name_host ON sippeers (name, host);
CREATE INDEX sippeers_ipaddr_port ON sippeers (ipaddr, port);
CREATE INDEX sippeers_host_port ON sippeers (host, port);
CREATE INDEX iaxfriends_name ON iaxfriends (name);
CREATE INDEX iaxfriends_name_host ON iaxfriends (name, host);
CREATE INDEX iaxfriends_name_ipaddr_port ON iaxfriends (name, ipaddr, port);
CREATE INDEX iaxfriends_ipaddr_port ON iaxfriends (ipaddr, port);
CREATE INDEX iaxfriends_host_port ON iaxfriends (host, port);
CREATE INDEX voicemail_mailbox ON voicemail (mailbox);
CREATE INDEX voicemail_context ON voicemail (context);
CREATE INDEX voicemail_mailbox_context ON voicemail (mailbox, context);
CREATE INDEX voicemail_imapuser ON voicemail (imapuser);
CREATE INDEX meetme_confno_start_end ON meetme (confno, starttime, endtime);
CREATE INDEX ps_endpoints_id ON ps_endpoints (id);
CREATE INDEX ps_auths_id ON ps_auths (id);
CREATE INDEX ps_aors_id ON ps_aors (id);
CREATE INDEX ps_contacts_id ON ps_contacts (id);
CREATE INDEX ps_domain_aliases_id ON ps_domain_aliases (id);
CREATE INDEX ps_endpoint_id_ips_id ON ps_endpoint_id_ips (id);
CREATE INDEX ps_systems_id ON ps_systems (id);
CREATE INDEX ps_globals_id ON ps_globals (id);
CREATE INDEX ps_transports_id ON ps_transports (id);
CREATE INDEX ps_registrations_id ON ps_registrations (id);
COMMIT;
